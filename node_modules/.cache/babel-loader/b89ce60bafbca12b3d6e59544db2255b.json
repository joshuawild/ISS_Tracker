{"ast":null,"code":"var _jsxFileName = \"/Users/jwild/Documents/GitHub/iss-tracker/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Map from '../components/Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getData = () => {\n      fetch('http://api.open-notify.org/iss-now.json').then(response => response.json()).then(iss_position => this.setState({\n        latitude: iss_position.iss_position.latitude,\n        longitude: iss_position.iss_position.longitude\n      }));\n    };\n\n    this.state = {\n      latitude: 0,\n      longitude: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.intervalID = setInterval(this.getData.bind(this), 3000);\n  }\n\n  componentWillUnmount() {\n    /*\n      stop getData() from continuing to run even\n      after unmounting this component\n    */\n    clearInterval(this.intervalID);\n  }\n\n  render() {\n    const {\n      latitude,\n      longitude\n    } = this.state;\n    const location = {\n      address: 'International Space Station',\n      lat: parseFloat(latitude, 10),\n      lng: parseFloat(longitude, 10)\n    };\n    return !latitude.length ? /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"vh-100 dt w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dtc v-mid tc ph3 ph4-l\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"f6 f2-m f-subheadline-l fw6 tc\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"F2\",\n        children: \"ISS Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n        children: /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            location: location,\n            zoomLevel: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jwild/Documents/GitHub/iss-tracker/src/containers/App.js"],"names":["React","Component","Scroll","ErrorBoundry","Map","App","constructor","getData","fetch","then","response","json","iss_position","setState","latitude","longitude","state","componentDidMount","intervalID","setInterval","bind","componentWillUnmount","clearInterval","render","location","address","lat","parseFloat","lng","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,GAAE;AACT;;AADS,SAuBbC,OAvBa,GAuBH,MAAM;AACdC,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF,YAAY,CAACA,YAAb,CAA0BE,QAArC;AAA+CC,QAAAA,SAAS,EAAEH,YAAY,CAACA,YAAb,CAA0BG;AAApF,OAAd,CAFxB;AAGD,KA3BY;;AAET,SAAKC,KAAL,GAAa;AACTF,MAAAA,QAAQ,EAAE,CADD;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAIDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,OAAL;AACA,SAAKW,UAAL,GAAkBC,WAAW,CAAC,KAAKZ,OAAL,CAAaa,IAAb,CAAkB,IAAlB,CAAD,EAA0B,IAA1B,CAA7B;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB;AACN;AACA;AACA;AACMC,IAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACD;;AAQDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0B,KAAKC,KAArC;AAEA,UAAMQ,QAAQ,GAAG;AACfC,MAAAA,OAAO,EAAE,6BADM;AAEfC,MAAAA,GAAG,EAAEC,UAAU,CAACb,QAAD,EAAW,EAAX,CAFA;AAGfc,MAAAA,GAAG,EAAED,UAAU,CAACZ,SAAD,EAAY,EAAZ;AAHA,KAAjB;AAMA,WAAO,CAACD,QAAQ,CAACe,MAAV,gBACH;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADG,gBAOC;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA,+BACA,QAAC,YAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,QAAQ,EAAEL,QAAf;AAAyB,YAAA,SAAS,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR;AAgBC;;AAvDmB;;AA2D5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Map from '../components/Map'\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            latitude: 0,\n            longitude: 0\n        }\n    }\n\n    intervalID;\n\n    componentDidMount() {\n        this.getData();\n        this.intervalID = setInterval(this.getData.bind(this), 3000);\n    }\n\n    componentWillUnmount() {\n      /*\n        stop getData() from continuing to run even\n        after unmounting this component\n      */\n      clearInterval(this.intervalID);\n    }\n\n    getData = () => {\n      fetch('http://api.open-notify.org/iss-now.json')\n        .then(response => response.json())\n        .then(iss_position => this.setState({latitude: iss_position.iss_position.latitude, longitude: iss_position.iss_position.longitude }))\n    }\n\n    render() {\n        const { latitude, longitude } = this.state;\n        \n        const location = {\n          address: 'International Space Station',\n          lat: parseFloat(latitude, 10),\n          lng: parseFloat(longitude, 10)\n        };\n\n        return !latitude.length ?\n            <article className='vh-100 dt w-100'>\n            <div className=\"dtc v-mid tc ph3 ph4-l\">\n              <h1 className=\"f6 f2-m f-subheadline-l fw6 tc\">Loading</h1>\n            </div>\n          </article> : \n           (\n                <div className='tc'>\n                    <h1 className='F2'>ISS Tracker</h1>\n                    <Scroll>\n                    <ErrorBoundry>\n                      <Map location={location} zoomLevel={4} />\n                    </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n        }\n\n    }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}